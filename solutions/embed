#!/usr/bin/env python

import os, sys
from glob import glob


TEMPLATE = '''
package %s

// WARNING: auto-generated file: DO NOT EDIT!

var (
\trawfiles = map[string]string {
%s
\t}
)

'''


def fail(m):
    sys.stderr.write(m + '\n')
    sys.exit(1)

def to_bytes(data, indent):
    ind = '\t'*indent
    r = [ind + '"']
    for i, c in enumerate(data):
        if i and i % 25 == 0:
            r.append('" +\n' + ind + '"')
        r.append('\\x%02x' % ord(c))
    r.append('"')
    return ''.join(r)


def main():
    cwd = os.getcwd()
    args = sys.argv[1:]
    if len(args) < 2:
        fail('Usage: %s package file [file0 .. fileN]' % sys.argv[0])
    
    package, names = args[0], args[1:]

    paths = [os.path.join(cwd, n) for n in names]
    paths = [g for n in names for g in glob(n)]

    mapping = []
    for i, path in enumerate(paths):
        name = os.path.basename(path)
        if not os.path.exists(path):
            fail('File not found: %r' % path)
        data = open(path, 'rb').read()
        data = to_bytes(data, 3)
        mapping.append('\n\t\t"%s": "" +\n%s,\n' % (name, data))

    body = TEMPLATE % (package, ''.join(mapping))
    path = os.path.join(cwd, 'rawfiles.go')
    open(path, 'w').write(body)

if __name__ == '__main__':
    main()

